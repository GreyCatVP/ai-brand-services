import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types
from modules.avatar import AvatarModule
from modules.shop import ShopModule
from modules.rag import RAGModule

load_dotenv()
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

avatar = AvatarModule()
shop   = ShopModule()
rag    = RAGModule()

@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üõç –ö–∞—Ç–∞–ª–æ–≥", "üìö FAQ", "üí¨ –ü–æ–º–æ—â—å")
    await message.answer("–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:", reply_markup=kb)

@dp.message_handler(lambda m: m.text == "üõç –ö–∞—Ç–∞–ª–æ–≥")
async def show_catalog(message: types.Message):
    text = shop.get_catalog()
    await message.answer(text)

@dp.message_handler(lambda m: m.text == "üìö FAQ")
async def faq(message: types.Message):
    await message.answer("–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å ‚Äî —è –Ω–∞–π–¥—É –æ—Ç–≤–µ—Ç —Å —Ü–∏—Ç–∞—Ç–æ–π.")

@dp.message_handler(lambda m: m.text == "üí¨ –ü–æ–º–æ—â—å")
async def help(message: types.Message):
    await message.answer("–û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É ‚Äî –ø–æ–º–æ–≥—É.")

@dp.message_handler()
async def any_text(message: types.Message):
    # –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–∏–Ω–≥: –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å ‚Äî RAG, –∏–Ω–∞—á–µ –∞–≤–∞—Ç–∞—Ä
    if "?" in message.text:
        answer = rag.ask(message.text)
        await message.answer(answer)
    else:
        answer = avatar.chat(message.text)
        await message.answer(answer)

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
